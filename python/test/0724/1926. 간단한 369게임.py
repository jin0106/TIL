# 3 6 9 게임을 프로그램으로 제작중이다. 게임 규칙은 다음과 같다.


# 1. 숫자 1부터 순서대로 차례대로 말하되, “3” “6” “9” 가 들어가 있는 수는 말하지 않는다.

# 1 2 3 4 5 6 7 8 9…

# 2. "3" "6" "9"가 들어가 있는 수를 말하지 않는대신, 박수를 친다. 이 때, 박수는 해당 숫자가 들어간 개수만큼 쳐야 한다.
# 예를 들어 숫자 35의 경우 박수 한 번, 숫자 36의 경우 박수를 두번 쳐야 한다.


# 입력으로 정수 N 이 주어졌을 때, 1~N 까지의 숫자를

# 게임 규칙에 맞게 출력하는 프로그램을 작성하라.

# 박수를 치는 부분은 숫자 대신, 박수 횟수에 맞게 “-“ 를 출력한다.

# 여기서 주의해야 할 것은 박수 한 번 칠 때는 - 이며, 박수를 두 번 칠 때는 - - 가 아닌 - - 이다.


# [제약사항]

# N은 10이상 1, 000이하의 정수이다. (10 ≤ N ≤ 1, 000)


# [입력]

# 입력으로 정수 N 이 주어진다.


# [출력]

# 1 ~ N까지의 숫자를 게임 규칙에 맞게 출력한다.

< Thinking process >
1. 3, 6, 9만 어떻게 체크를 할까
2. 10이상의 숫자는 각각 체크를 해줘야 할것 같다.
3. 이중 포문을 사용해보자


N = int(input())    # 정수 입력
hypon = '3', '6', '9'  # 3, 6, 9를 담은 str 생성
answer = ''  # 답을 빈 스트링으로 생성
for i in range(1, N+1):
    a = str(i)  # 인덱싱을 위해 str 변경
    cnt = 0  # cnt 미리 설정
    for j in range(len(a)):  # 이중 for문으로 a길이만큼 돌리기.
        if a[j] in hypon:  # 만약 a[j]가 hypon에 있다면
            cnt += 1      # cnt 1을 더해준다
    if cnt == 0:          # cnt가 0 이라면 a를 그냥 그대로 추가
        answer += a
    elif cnt > 0:         # cnt가 0보다 크면 cnt 수만큼 곱해서 '-' 더해준다.
        answer += '-'*cnt
    answer += ' '         # 숫자 사이간의 빈 칸이 필요하므로 fo문이 끝날때 마다 한 번씩 더 해준다.
print(answer)
