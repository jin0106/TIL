# 상자들이 쌓여있는 방이있다.
# 방이 오른쪽으로 90도 회전하여 상자들이 중력의 영향을 받아 낙하한다고 할 때,
# 낙차가 가장 큰 상자를 구하여 그 낙차를 출력하여 보자.


# 위의 예시에서 총 26개의 상자가 회전 후, 오른쪽 그림의 상태가 된다.

# A상자의 낙차가 7로 가장 크므로 7을 출력하면 된다.

# 회전결과, B상자의 낙차는 6, C상자의 낙차는 1이다.
# 중력은 회전이 완료된 후 적용된다.
# 상자들은 모두 한 쪽 벽면에 붙여진 상태로 쌓여 2차원의 형태를 이루며 벽에서 떨어져서 쌓인 상자는 없다.

# [입력]
# 첫 번째 줄에 test case의 수 T(1≤T≤100)가 주어진다.
# 각 케이스의 첫 째줄에 방의 가로 길이 N(2≤N≤100)가 주어진다.
# 다음 줄에는 N개의 상자들이 쌓여있는 높이 H(0≤H≤M)가 주어진다.

# [출력]
# 낙차가 가장 큰 값을 출력한다.


tc = int(input())
for t in range(1, tc+1):
    N = int(input())
    box = list(map(int, input().split()))

    max_len = 0
    for x in range(N):
        cnt = 0
        for j in range(x+1, N):
            if box[x] > box[j]:
                cnt += 1
        if cnt > max_len:
            max_len = cnt
    print(f'#{t} {max_len}')
